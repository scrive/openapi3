name: Tests
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  generate-matrix:
    name: "Generate matrix from cabal"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    runs-on: ubuntu-latest
    steps:
      - name: Extract the tested GHC versions
        id: set-matrix
        uses: kleidukos/get-tested@v0.1.7.1
        with:
          cabal-file: get-tested.cabal
          ubuntu-version: "latest"
          macos-version: "13"
          version: 0.1.7.1
  tests:
    name: ${{ matrix.ghc }} on ${{ matrix.os }}
    needs: generate-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{ fromJSON(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: "Install tools"
        run: cabal install --ignore-project doctest --flag cabal-doctest

      - name: Checkout base repo
        uses: actions/checkout@v4

      - name: Set up Haskell
        id: setup-haskell
        uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: "latest"

      - name: Configure
        run: |
          ARCHITECTURE=$(uname -m)
          echo "ARCH=$ARCHITECTURE" >> $GITHUB_ENV
          echo ${{ env.ARCH }}

      - name: Freeze
        run: cabal freeze --project-file=cabal.release.project

      - name: Cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-ghc-${{ matrix.ghc }}-${{ hashFiles('**/plan.json') }}
          path: ${{ steps.setup-haskell.outputs.cabal-store }}
          restore-keys: ${{ runner.os }}-ghc-${{ matrix.ghc }}-

      - name: Build
        run: cabal build --project-file=cabal.release.project

      - name: Test
        run: |
          cabal test --project-file=cabal.release.project all
          cabal doctest
